{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 30,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ]\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "lnn4mm3bzq",
  "leftColumn": 8,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 49,
  "mobileLeftColumn": 6,
  "mobileRightColumn": 29,
  "mobileTopRow": 19,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "parentColumnSpace": 22.234375,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 31,
  "srcDoc": {
    "css": "#root {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.signature-container {\n  background: #fff;\n  border: 2px solid var(--appsmith-theme-primaryColor, #6558f5);\n  border-radius: 14px;\n  padding: 18px 20px 18px 20px;\n  box-shadow: 0 3px 11px 0 rgba(30, 33, 54, 0.06);\n  max-width: 410px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n}\n\n.signature-canvas {\n  background: #f7f7f9;\n  border-radius: 6px;\n  border: 1.5px solid #eaeaea;\n  box-shadow: 0 1.5px 7px 0 rgba(30, 33, 54, 0.04);\n  display: block;\n  margin-bottom: 10px;\n  touch-action: none; /* Prevent scrolling on touch */\n}\n\n.signature-button-bar {\n  display: flex;\n  gap: 10px;\n  justify-content: flex-end;\n  width: 100%;\n}\n\n.signature-btn {\n  font-size: 13px;\n  background: var(--appsmith-theme-primaryColor, #6558f5);\n  color: #fff;\n  border-radius: 5px;\n  border: none;\n  padding: 7px 17px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.signature-btn.clear {\n  background: #eee;\n  color: #333;\n  border: 1px solid #ddd;\n}\n\n.signature-btn.save {\n  background: var(--appsmith-theme-primaryColor, #6558f5);\n}\n\n.signature-btn:active,\n.signature-btn:hover {\n  opacity: 0.82;\n}\n\n.signature-status {\n  min-height: 18px;\n  font-size: 12.5px;\n  color: #707070;\n  align-self: flex-start;\n  margin-top: 2px;\n}",
    "html": "<!-- Signature Pad root div + required stylesheet -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\"/>\n<div id=\"root\"></div>",
    "js": "import React from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM from \"https://esm.sh/react-dom@18.2.0\";\nconst CANVAS_WIDTH = 340;\nconst CANVAS_HEIGHT = 140;\nfunction SignaturePadWidget() {\n  const canvasRef = React.useRef(null);\n  const [drawing, setDrawing] = React.useState(false);\n  const [status, setStatus] = React.useState(\"\");\n  const [savedUrl, setSavedUrl] = React.useState(appsmith.model.signature || null);\n\n  // Load from model if present, otherwise fallback to empty\n  React.useEffect(() => {\n    if (appsmith.model.signature) {\n      setSavedUrl(appsmith.model.signature);\n      setStatus(\"Loaded saved signature.\");\n    }\n  }, [appsmith.model.signature]);\n\n  // Mouse & touch event handlers\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    let last = null;\n    let moving = false;\n    function getPos(e) {\n      if (e.touches) {\n        const rect = canvas.getBoundingClientRect();\n        return {\n          x: e.touches[0].clientX - rect.left,\n          y: e.touches[0].clientY - rect.top\n        };\n      } else {\n        return {\n          x: e.offsetX,\n          y: e.offsetY\n        };\n      }\n    }\n    function start(e) {\n      moving = true;\n      last = getPos(e);\n    }\n    function move(e) {\n      if (!moving) return;\n      e.preventDefault();\n      const pos = getPos(e);\n      ctx.beginPath();\n      ctx.moveTo(last.x, last.y);\n      ctx.lineTo(pos.x, pos.y);\n      ctx.strokeStyle = '#1a181c';\n      ctx.lineWidth = 2.8;\n      ctx.lineCap = 'round';\n      ctx.stroke();\n      last = pos;\n    }\n    function end() {\n      moving = false;\n      last = null;\n    }\n\n    // Mouse Events\n    canvas.addEventListener(\"mousedown\", start);\n    canvas.addEventListener(\"mousemove\", move);\n    canvas.addEventListener(\"mouseup\", end);\n    canvas.addEventListener(\"mouseleave\", end);\n    // Touch Events\n    canvas.addEventListener(\"touchstart\", start);\n    canvas.addEventListener(\"touchmove\", move, {\n      passive: false\n    });\n    canvas.addEventListener(\"touchend\", end);\n    // Clean up\n    return () => {\n      canvas.removeEventListener(\"mousedown\", start);\n      canvas.removeEventListener(\"mousemove\", move);\n      canvas.removeEventListener(\"mouseup\", end);\n      canvas.removeEventListener(\"mouseleave\", end);\n      canvas.removeEventListener(\"touchstart\", start);\n      canvas.removeEventListener(\"touchmove\", move);\n      canvas.removeEventListener(\"touchend\", end);\n    };\n  }, [canvasRef]);\n\n  // Clear signature\n  const handleClear = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    setSavedUrl(null);\n    setStatus(\"เซ็นใหม่ได้เลย\");\n    appsmith.triggerEvent(\"onClear\");\n    appsmith.updateModel({\n      signature: \"\"\n    });\n  };\n\n  // Save signature\n  const handleSave = React.useCallback(() => {\n    const url = canvasRef.current.toDataURL(\"image/png\");\n    setSavedUrl(url);\n    setStatus(\"บันทึกลายเซ็นแล้ว!\");\n    // Update to Appsmith model so external can retrieve\n    appsmith.updateModel({\n      signature: url\n    });\n    appsmith.triggerEvent(\"onSave\", url);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signature-container\"\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"signature-canvas\",\n    ref: canvasRef,\n    width: CANVAS_WIDTH,\n    height: CANVAS_HEIGHT,\n    style: {\n      touchAction: \"none\",\n      border: \"1px solid #bbb\"\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signature-button-bar\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"signature-btn clear\",\n    title: \"\\u0E25\\u0E1A\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\",\n    onClick: handleClear\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-eraser\"\n  }), \" \\u0E40\\u0E04\\u0E25\\u0E35\\u0E22\\u0E23\\u0E4C\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"signature-btn save\",\n    title: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\",\n    onClick: handleSave\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-floppy-disk\"\n  }), \" \\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signature-status\"\n  }, status), savedUrl && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left',\n      marginTop: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 12,\n      color: '#888',\n      marginBottom: 2\n    }\n  }, \"\\u0E14\\u0E39\\u0E15\\u0E31\\u0E27\\u0E2D\\u0E22\\u0E48\\u0E32\\u0E07\\u0E25\\u0E32\\u0E22\\u0E40\\u0E0B\\u0E47\\u0E19\\u0E17\\u0E35\\u0E48\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E44\\u0E27\\u0E49:\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: savedUrl,\n    alt: \"\\u0E40\\u0E0B\\u0E47\\u0E19\\u0E25\\u0E32\\u0E22\\u0E21\\u0E37\\u0E2D\",\n    style: {\n      width: '180px',\n      border: '1px solid #eee',\n      background: '#f7f7f9',\n      borderRadius: 4,\n      padding: '1.5px'\n    }\n  })));\n}\nappsmith.onReady(() => {\n  ReactDOM.render(/*#__PURE__*/React.createElement(SignaturePadWidget, null), document.getElementById(\"root\"));\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 0,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "#root {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n.signature-container {\n  background: #fff;\n  border: 2px solid var(--appsmith-theme-primaryColor,#6558f5);\n  border-radius: 14px;\n  padding: 18px 20px 18px 20px;\n  box-shadow: 0 3px 11px 0 rgba(30,33,54,0.06);\n  max-width: 410px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n}\n.signature-canvas {\n  background: #f7f7f9;\n  border-radius: 6px;\n  border: 1.5px solid #eaeaea;\n  box-shadow: 0 1.5px 7px 0 rgba(30,33,54,0.04);\n  display: block;\n  margin-bottom: 10px;\n  touch-action: none; /* Prevent scrolling on touch */\n}\n.signature-button-bar {\n  display: flex;\n  gap: 10px;\n  justify-content: flex-end;\n  width: 100%;\n}\n.signature-btn {\n  font-size: 13px;\n  background: var(--appsmith-theme-primaryColor,#6558f5);\n  color: #fff;\n  border-radius: 5px;\n  border: none;\n  padding: 7px 17px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n.signature-btn.clear {\n  background: #eee;\n  color: #333;\n  border: 1px solid #ddd;\n}\n.signature-btn.save {\n  background: var(--appsmith-theme-primaryColor,#6558f5);\n}\n.signature-btn:active,\n.signature-btn:hover {\n  opacity: 0.82;\n}\n.signature-status {\n  min-height: 18px;\n  font-size: 12.5px;\n  color: #707070;\n  align-self: flex-start;\n  margin-top: 2px;\n}\n",
    "html": "<!-- Signature Pad root div + required stylesheet -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\"/>\n<div id=\"root\"></div>",
    "js": "import React from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM from \"https://esm.sh/react-dom@18.2.0\";\n\nconst CANVAS_WIDTH = 340;\nconst CANVAS_HEIGHT = 140;\n\nfunction SignaturePadWidget() {\n  const canvasRef = React.useRef(null);\n  const [drawing, setDrawing] = React.useState(false);\n  const [status, setStatus] = React.useState(\"\");\n  const [savedUrl, setSavedUrl] = React.useState(appsmith.model.signature || null);\n\n  // Load from model if present, otherwise fallback to empty\n  React.useEffect(() => {\n    if(appsmith.model.signature) {\n      setSavedUrl(appsmith.model.signature);\n      setStatus(\"Loaded saved signature.\");\n    }\n  }, [appsmith.model.signature]);\n\n  // Mouse & touch event handlers\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    let last = null;\n    let moving = false;\n\n    function getPos(e) {\n      if (e.touches) {\n        const rect = canvas.getBoundingClientRect();\n        return {\n          x: e.touches[0].clientX - rect.left,\n          y: e.touches[0].clientY - rect.top\n        };\n      } else {\n        return {\n          x: e.offsetX,\n          y: e.offsetY\n        };\n      }\n    }\n\n    function start(e) {\n      moving = true;\n      last = getPos(e);\n    }\n    function move(e) {\n      if (!moving) return;\n      e.preventDefault();\n      const pos = getPos(e);\n      ctx.beginPath();\n      ctx.moveTo(last.x, last.y);\n      ctx.lineTo(pos.x, pos.y);\n      ctx.strokeStyle = '#1a181c';\n      ctx.lineWidth = 2.8;\n      ctx.lineCap = 'round';\n      ctx.stroke();\n      last = pos;\n    }\n    function end() {\n      moving = false;\n      last = null;\n    }\n\n    // Mouse Events\n    canvas.addEventListener(\"mousedown\", start);\n    canvas.addEventListener(\"mousemove\", move);\n    canvas.addEventListener(\"mouseup\", end);\n    canvas.addEventListener(\"mouseleave\", end);\n    // Touch Events\n    canvas.addEventListener(\"touchstart\", start);\n    canvas.addEventListener(\"touchmove\", move, { passive: false });\n    canvas.addEventListener(\"touchend\", end);\n    // Clean up\n    return () => {\n      canvas.removeEventListener(\"mousedown\", start);\n      canvas.removeEventListener(\"mousemove\", move);\n      canvas.removeEventListener(\"mouseup\", end);\n      canvas.removeEventListener(\"mouseleave\", end);\n      canvas.removeEventListener(\"touchstart\", start);\n      canvas.removeEventListener(\"touchmove\", move);\n      canvas.removeEventListener(\"touchend\", end);\n    };\n  }, [canvasRef]);\n\n  // Clear signature\n  const handleClear = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    setSavedUrl(null);\n    setStatus(\"เซ็นใหม่ได้เลย\");\n    appsmith.triggerEvent(\"onClear\");\n    appsmith.updateModel({ signature: \"\" });\n  };\n\n  // Save signature\n  const handleSave = React.useCallback(() => {\n    const url = canvasRef.current.toDataURL(\"image/png\");\n    setSavedUrl(url);\n    setStatus(\"บันทึกลายเซ็นแล้ว!\");\n    // Update to Appsmith model so external can retrieve\n    appsmith.updateModel({ signature: url });\n    appsmith.triggerEvent(\"onSave\", url);\n  }, []);\n\n  return (\n    <div className=\"signature-container\">\n      <canvas\n        className=\"signature-canvas\"\n        ref={canvasRef}\n        width={CANVAS_WIDTH}\n        height={CANVAS_HEIGHT}\n        style={{touchAction: \"none\", border: \"1px solid #bbb\"}}\n      />\n      <div className=\"signature-button-bar\">\n        <button className=\"signature-btn clear\" title=\"ลบทั้งหมด\" onClick={handleClear}>\n          <i className=\"fa fa-eraser\"></i> เคลียร์\n        </button>\n        <button className=\"signature-btn save\" title=\"บันทึก\" onClick={handleSave}>\n          <i className=\"fa fa-floppy-disk\"></i> บันทึก\n        </button>\n      </div>\n      <div className=\"signature-status\">{status}</div>\n      {savedUrl && (\n        <div style={{textAlign:'left',marginTop:8}}>\n            <div style={{fontSize:12,color:'#888',marginBottom:2}}>ดูตัวอย่างลายเซ็นที่บันทึกไว้:</div>\n            <img src={savedUrl} alt=\"เซ็นลายมือ\" style={{width:'180px',border:'1px solid #eee',background:'#f7f7f9',borderRadius:4,padding:'1.5px'}}/>\n        </div>\n      )}\n    </div>\n  );\n}\n\nappsmith.onReady(() => {\n  ReactDOM.render(<SignaturePadWidget />, document.getElementById(\"root\"));\n});\n"
  },
  "version": 1,
  "widgetId": "vc7fznzsb9",
  "widgetName": "Custom1"
}